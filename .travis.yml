language: generic

matrix:
  include:
    # Linux and GCC
    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
      env:
        - CC_COMPILER=gcc-8
        - CXX_COMPILER=g++-8
    # Linux and Clang
    - os: linux
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
      env: 
        - CC_COMPILER=clang-6.0
        - CXX_COMPILER=clang++-6.0
    # OS X and Clang
    - os: osx
      osx_image: xcode10
      env:
        - CC_COMPILER=cc
        - CXX_COMPILER=c++
    # OS X and GCC
    - os: osx
      osx_image: xcode10
      env:
        - CC_COMPILER=gcc-8
        - CXX_COMPILER=g++-8

before_install:
  # Workaround for weird Python binary in the latest Travis CI update
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH=/usr/bin/:$PATH ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update -qq ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y libhdf5-dev hdf5-tools libpython-dev python-h5py python-numpy ninja-build ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo curl -L -O https://cmake.org/files/v3.6/cmake-3.6.1-Linux-x86_64.tar.gz ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo tar xf cmake-3.6.1-Linux-x86_64.tar.gz ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then CMAKE_EXEC=`pwd`/cmake-3.6.1-Linux-x86_64/bin/cmake ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then CTEST_EXEC=`pwd`/cmake-3.6.1-Linux-x86_64/bin/ctest ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then CMAKE_EXEC=cmake ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then CTEST_EXEC=ctest ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update > /dev/null ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew outdated cmake || brew upgrade cmake ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask uninstall oclint ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew reinstall gcc ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install md5sha1sum ninja homebrew/core/numpy homebrew/core/hdf5 python@2 ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then pip install h5py ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then PY_INC=`python-config --includes | grep -o '\-I[^ ]*' | head -n 1 | cut -c 3-` ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then PY_LIB=`python-config --ldflags | grep -o '\-L[^ ]*' | head -n 1 | cut -c 3- | xargs -I % find % -name libpython*.dylib` ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then EXTRA_FLAGS="-DPYTHON_LIBRARY=${PY_LIB} -DPYTHON_INCLUDE_DIR=${PY_INC}" ; fi
  - ./get_dependencies.sh

script:
  - mkdir build
  - cd build
  - CC=$CC_COMPILER CXX=$CXX_COMPILER $CMAKE_EXEC -DSTRICT_BUILD=ON -DUSE_HDF5=ON -DUSE_PYTHON=ON ${EXTRA_FLAGS} .. -GNinja
  - ninja -v -j 2
  - $CTEST_EXEC -j 2 --output-on-failure
